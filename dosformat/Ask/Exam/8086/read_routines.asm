INCLUDE MACROS.TXT

DATA SEGMENT
    MSG DB "WELCOME $"
    NEW_LINE DB 0AH,0DH,'$' 
    NUMS DB 11 DUP("$")          
    NCNT DW 0
ENDS                  

STACK SEGMENT
    DW 128 DUP(?)
ENDS

CODE SEGMENT
    ASSUME CS:CODE, SS:STACK, DS:DATA, ES:DATA
    
MAIN PROC FAR
     MOV AX, DATA
     MOV DS, AX
     MOV ES, AX

START:
    PRINT_STRING MSG 
    PRINT_STRING NEW_LINE
;    CALL READ_HEX      
;    PRINT_STRING NEW_LINE
;    CALL READ_HEX_2_NUM  
;    PRINT_STRING NEW_LINE
;    CALL READ_NUM
;    
;    
;    MOV CX, 10
;GETN:
;    CALL READ_IN_NUMS
;    LOOP GETN
;    PRINT_STRING NEW_LINE
;    PRINT_STRING NUMS
;          
    MOV AX,1BC4H
    CALL PRINT_NUM_2_HEX

    
    
    EXIT
        
MAIN ENDP 
         
;===PROCS=== 
                 
;=== READ NUMBER IN NUMS ARRAY
READ_IN_NUMS PROC NEAR
    CALL READ_HEX
    MOV BX,OFFSET NUMS
    ADD BX,NCNT
    MOV [BX], AL
    INC NCNT
    RET
READ_IN_NUMS ENDP
 
;=== ACCEPTS AND DISPLAYS ONLY HEX
READ_HEX PROC NEAR:
READ_HEX_IGN:
    READ
    CMP AL,'0'
    JL READ_HEX_IGN
    CMP AL,'9'
    JG READ_HEX_TEST_CAPS
    JMP READ_HEX_NUM
    
READ_HEX_TEST_CAPS:
    CMP AL,'A'
    JL READ_HEX_IGN
    CMP AL,'F'
    JG READ_HEX_TEST_SMALL
    JMP READ_HEX_CAPS
    
READ_HEX_TEST_SMALL:
    CMP AL,'a'
    JL READ_HEX_IGN
    CMP AL,'f'
    JG READ_HEX_IGN
    JMP READ_HEX_SMALL

READ_HEX_NUM:
READ_HEX_CAPS:
READ_HEX_SMALL:
    PRINT AL
    RET       
READ_HEX ENDP

               
;===    READS HEX DIGIT 
;===    AND GETS IT'S VALUE               
READ_HEX_2_NUM PROC NEAR:
READ_HEX_2_NUM_IGN:
    READ
    CMP AL,'0'
    JL READ_HEX_2_NUM_IGN
    CMP AL,'9'
    JG READ_HEX_2_NUM_TEST_CAPS
    JMP READ_HEX_2_NUM_NUM
    
READ_HEX_2_NUM_TEST_CAPS:
    CMP AL,'A'
    JL READ_HEX_2_NUM_IGN
    CMP AL,'F'
    JG READ_HEX_2_NUM_TEST_SMALL
    JMP READ_HEX_2_NUM_CAPS
    
READ_HEX_2_NUM_TEST_SMALL:
    CMP AL,'a'
    JL READ_HEX_2_NUM_IGN
    CMP AL,'f'
    JG READ_HEX_2_NUM_IGN
    JMP READ_HEX_2_NUM_SMALL

READ_HEX_2_NUM_NUM:
    PRINT AL
    SUB AL,30H
    RET
READ_HEX_2_NUM_CAPS:
    PRINT AL
    SUB AL,55H
    RET
READ_HEX_2_NUM_SMALL:
    PRINT AL
    SUB AL,87H
    RET
READ_HEX_2_NUM ENDP


    
;=== READS DECIMAL NUMBER
READ_NUM PROC NEAR:
READ_NUM_IGN:
    READ
    CMP AL,'0'
    JL READ_NUM_IGN
    CMP AL,'9'
    JG READ_NUM_IGN
    PRINT AL
    SUB AL,30H
    RET
READ_NUM ENDP
                  
; PRINTS AX IN HEX FORM                  
PRINT_NUM_2_HEX PROC NEAR
    PUSH BX 
    PUSH CX
    MOV CX,AX
    MOV BL,CH
    AND BL,0F0H              
    SHR BL,4
    CALL PRINT_HEX
    MOV BL,CH
    AND BL,0FH
    CALL PRINT_HEX
    MOV BL,CL
    AND BL,0F0H
    SHR BL,4
    CALL PRINT_HEX
    MOV BL,CL
    AND BL,0FH
    CALL PRINT_HEX
    POP CX
    POP BX
    RET
PRINT_NUM_2_HEX ENDP

; PRINTS BL DIGIT IN HEX    
PRINT_HEX PROC NEAR
    CMP BL,9
    JG PRINT_HEX_A
    ADD BL,30H
    PRINT BL
    RET
PRINT_HEX_A:
    ADD BL,37H
    PRINT BL
    RET
PRINT_HEX ENDP
       
           
           
CODE ENDS      


END MAIN