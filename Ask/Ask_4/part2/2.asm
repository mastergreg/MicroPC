INCLUDE MACROS.TXT

DATA SEGMENT
    ECHO_PAGE DB 0
    ECHO_LINE DB 0
    ECHO_COL  DB 0
    MSG_PAGE  DB 0
    MSG_LINE  DB 0
    MSG_COL   DB 40
ENDS

STACK SEGMENT
    DW   128  DUP(?)
ENDS

CODE SEGMENT

MAIN PROC FAR
; SET SEGMENT REGISTERS:
    MOV AX, DATA
    MOV DS, AX
    MOV ES, AX

START:
    CALL OPEN_RS232

READ_RS232:
    CALL RXCH_RS232
    CMP AL,0
    JE NOCHAR
    MOV BL,AL
    PRINT_MSG BL
    
    
NOCHAR:
    READNB
    JZ READ_RS232
    MOV BL,AL
    PRINT_MSG BL
    JMP READ_RS232

QUIT:
    MOV AL,0H
    EXIT
         
MAIN ENDP

         
;==== INITIALIZE RS232 PORT ====
OPEN_RS232 PROC NEAR
    JMP BEGIN
BAUD_RATE LABEL WORD
    DW 1047
    DW 768
    DW 385
    DW 192
    DW 96
    DW 48
    DW 24
    DW 12
BEGIN:
    STI
    MOV AH,AL
    MOV DX,3FBH
    MOV AL,80H
    OUT DX,AL

    MOV DL,AH
    MOV CL,4
    ROL DL,CL
    AND DX,0EH
    MOV DI,OFFSET BAUD_RATE
    ADD DI,DX
    MOV DX,3F9H
    MOV AL,CS:[DI]+1
    OUT DX,AL

    MOV DX,3F8H
    MOv AL,CS:[DI]
    OUT DX,AL

    MOV DX,3FBH
    MOV AL,AH
    AND AL,01FH
    OUT DX,AL
    MOV DX,3F9H
    MOV AL,0H
    OUT DX,AL
    RET
OPEN_RS232 ENDP

;==== READ 1 CHAR FROM RS232 PORT ====
RXCH_RS232 PROC NEAR
    MOV DX,3FDH
    IN AL,DX

    TEST AL,1
    JZ NOTHING
    SUB DX,5
    IN AL,DX
    JMP EXIT2
NOTHING:
    MOV AL,0
EXIT2:
    RET

RXCH_RS232 ENDP

;==== WRITE 1 CHAR TO RS232 PORT ====
TXCH_RS232 PROC NEAR
    PUSH AX
    MOV DX,3FDH

TXCH_RS232_2:
    IN AL,DX
    TEST AL,20H
    JZ TXCH_RS232_2

    SUB DX,5
    POP AX
    OUT DX,AL
    RET
TXCH_RS232 ENDP

END MAIN
