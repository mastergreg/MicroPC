;This macro change registers AH,AL
READ MACRO 
    MOV AH,1
    INT 21H
ENDM  

;Non blocking read
READNB MACRO 
    MOV AH,06H
    MOV DL,0FFH
    INT 21H
ENDM  

MOVE_THERE_CX MACRO COL
    MOV AH,02H
    MOV DH,CL
    MOV DL,COL
    MOV BH,0H
    INT 10H
ENDM

MOVE_THERE MACRO LINE COL
    MOV AH,02H
    MOV BP,OFFSET LINE
    MOV DH,DS:[BP]
    MOV BP,OFFSET COL
    MOV DL,DS:[BP]
    MOV BH,0H
    INT 10H
ENDM


INCREASE_LINE MACRO LINE COLUMN MINC
; === Zero Column ===
    MOV BP,OFFSET COLUMN
    MOV DS:[BP],MINC
; === Increase Line ===    
    MOV BP,OFFSET LINE
    INC DS:[BP]
    
ENDM

SCROLL_UP MACRO LINES UPLR UPLC LORR LORC
    MOV AL,LINES
    MOV CH,UPLR
    MOV CL,UPLC
    MOV DH,LORR
    MOV DL,LORC
    MOV AH,06H
    INT 10H
ENDM
    
CLEAR MACRO
    XOR CX,CX
    MOV DH,24
    MOV DL,80
    MOV BH,7
    MOV AX,700H
    INT 10H
ENDM

; This will use INT 10/02H
; to move the cursor 
; to the appropriate position
PRINT_THERE MACRO CHAR
    MOV AL,CHAR
    MOV AH,0EH
    INT 10H
ENDM

;This macro uses registers AH,DX
PRINT_STRING MACRO STRING
    MOV DX,OFFSET STRING ;Assume that string is a variable or constant, NOT an address
    MOV AH,09H
    INT 21H 
ENDM

EXIT MACRO
    MOV AH,4CH
    INT 21H
ENDM
